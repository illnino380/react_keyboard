{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","keypressHandler","event","eventKeyName","code","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,2BAFb,EAaEC,gBAAkB,SAACC,GACjB,IAAMC,EAA8B,UAAfD,EAAME,KACvBF,EAAME,KACNF,EAAMG,IAEV,EAAKC,SAAS,CAAEN,QAAQ,4BAAD,OAA8BG,EAA9B,QAlB3B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKR,mBAN5C,kCASE,WACEM,SAASG,oBAAoB,QAASD,KAAKR,mBAV/C,oBAqBE,WACE,IAAQD,EAAYS,KAAKV,MAAjBC,QAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BX,UA1BrC,GAAyBY,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.b6b87153.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  message: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keypressHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keypressHandler);\n  }\n\n  keypressHandler = (event: KeyboardEvent) => {\n    const eventKeyName = event.code === 'Space'\n      ? event.code\n      : event.key;\n\n    this.setState({ message: `The last pressed key is [${eventKeyName}]` });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}